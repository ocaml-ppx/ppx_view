module ConstExp : sig

  val char
     : (char, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val string_delim
     : (string * string option, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val string
     : (string, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val integer
     : (string * char option, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val int
     : (int, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val int32
     : (int32, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val int64
     : (int64, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val nativeint
     : (nativeint, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

  val float
     : (string * char option, 'i, 'o) View.t
    -> (Parsetree.expression, 'i, 'o) View.t

end
